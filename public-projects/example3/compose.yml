version: "3"

services:

  nginx:
    container_name: nginx
    image: "nginx:latest"
    ports:
      - 80:80
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - springboot
      - node 
    networks:
      - app
    restart: on-failure

  springboot:
    container_name: springboot
    build:
      context: ./springboot
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    networks:
      - app
    depends_on:
      - mysql
      # mysql: //using for healcheck
      #   condition: service_healthy
    restart: on-failure

  node:
    container_name: node
    build:
      context: ./node
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    networks:
      - app
    depends_on:
      - mysql
      # mysql: //using for healcheck
      #   condition: service_healthy
    restart: on-failure
     
  mysql:
    container_name: mysql
    image: "mysql:8.0"
    environment:
      MYSQL_ROOT_PASSWORD: password123_ABC
      MYSQL_DATABASE: db_example
      MYSQL_USER: thodev
      MYSQL_PASSWORD: password123_ABC
    command: --init-file /my-config
    configs:
      - source: my-config
        target: /my-config
    volumes:
      - mysql-data:/var/lib/mysql
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword123_ABC"]
    #   interval: 1s
    #   retries: 3
    #   start_period: 25s
    networks: 
      - app

volumes: 
  mysql-data:
configs:
  my-config:
    file: ./node/my-config
  default.conf:
    file: ./nginx/default.conf
networks:
  app:
    name: app

